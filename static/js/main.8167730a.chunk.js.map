{"version":3,"sources":["loading.png","App.js","index.js"],"names":["module","exports","customFetch","url","fetch","method","headers","Authorization","process","LoadingIndicator","useState","view","setView","useEffect","timeout","setTimeout","clearTimeout","style","styles","loadingWrapper","src","require","alt","loadingImg","visibility","GitActivityDisplay","data","dayOfWeek","Date","toDateString","split","dayIndex","findIndex","item","className","container","map","idx","boxColor","commonDayStyle","day","backgroundColor","dayOfStyle","border","key","display","justifyContent","alignItems","flexDirection","width","height","color","fontStyle","marginRight","fontSize","fontWeight","App","setData","loading","setLoading","a","then","res","json","reposInfo","repo","name","repoList","resultSet","Promise","all","repoActivity","repoDayActivity","days","console","log","fetchData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8167730a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.04ac9f85.png\";","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction customFetch(url) {\n  return fetch(url, {\n    method: \"GET\",\n    headers: {\n      Authorization: process.env.REACT_APP_API_GITHUB\n    }\n  });\n}\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  async function fetchData() {\n    // get user's repository names\n    const repoList = await customFetch(\n      \"https://api.github.com/user/repos\"\n    ).then(async res => {\n      const reposInfo = await res.json();\n      return reposInfo.map(repo => repo.name);\n    });\n\n    const resultSet = [0, 0, 0, 0, 0, 0, 0];\n    await Promise.all(\n      repoList.map(async repo => {\n        await customFetch(\n          `https://api.github.com/repos/devohno/${repo}/stats/commit_activity`\n        ).then(async res => {\n          const repoActivity = await res.json();\n\n          // Get current week activity\n          const repoDayActivity = repoActivity[51].days;\n\n          // reflection\n          await Promise.all(\n            repoDayActivity.map((day, idx) => {\n              resultSet[idx] += day;\n            })\n          );\n        });\n      })\n    );\n\n    console.log(resultSet);\n    setData(resultSet);\n    setLoading(false);\n  }\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => fetchData(), 2000);\n  }, []);\n\n  return (\n    <div className=\"App__container\">\n      {!loading ? <GitActivityDisplay data={data} /> : <LoadingIndicator />}\n    </div>\n    // <div className=\"App\">\n    // </div>\n  );\n}\n\nconst LoadingIndicator = () => {\n  const [view, setView] = useState(true);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => setView(!view), 300);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [view]);\n  return (\n    <div style={styles.loadingWrapper}>\n      <img\n        src={require(\"./loading.png\")}\n        alt=\"loading\"\n        style={styles.loadingImg}\n      />\n      <p style={{ visibility: view ? \"visible\" : \"hidden\" }}>\n        Github is now loading...\n      </p>\n    </div>\n  );\n};\n\nconst GitActivityDisplay = ({ data }) => {\n  // What is today's day of week?\n  const dayOfWeek = new Date().toDateString().split(\" \")[0];\n  const daySet = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n  const dayIndex = daySet.findIndex(item => item === dayOfWeek);\n\n  return (\n    <div className=\"Content__wrapper\">\n      <div style={styles.container}>\n        {data.map((item, idx) => {\n          let boxColor = \"\";\n          switch (item) {\n            case 0:\n              boxColor = \"#ebedf0\";\n              break;\n            case 1:\n            case 2:\n              boxColor = \"#c6e48b\";\n              break;\n            case 3:\n            case 4:\n              boxColor = \"#7bc96f\";\n              break;\n            case 5:\n            case 6:\n              boxColor = \"#239a3b\";\n              break;\n            default:\n              boxColor = \"#196127\";\n              break;\n          }\n          const commonDayStyle = { ...styles.day, backgroundColor: boxColor };\n          const dayOfStyle =\n            idx === dayIndex\n              ? { ...commonDayStyle, border: \"3px solid rgb(0, 0, 0, 0.5)\" }\n              : commonDayStyle;\n          return (\n            <div key={idx} style={dayOfStyle}>\n              {item}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    width: \"inherit\",\n    height: \"inherit\"\n  },\n  loadingWrapper: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    color: \"#272C34\",\n    fontStyle: \"italic\"\n  },\n  loadingImg: {\n    width: 50,\n    height: 50,\n    marginRight: 10\n  },\n  day: {\n    width: \"inherit\",\n    height: \"inherit\",\n    border: \"2px solid white\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontSize: 15,\n    fontWeight: \"600\"\n  }\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import './index.css';\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}